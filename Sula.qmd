---
title: "Sula"
format: html
editor: visual
author: "Disem Sula"
---
```{r}
#| message: false
here::i_am("Final_lab_Sula.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
library(stringr)
```

# Main data set import

##Question 1

Adding the data to the project and first commits

##Question 2

Click [here](https://github.com/suladi23/star_systems) for the github repository

## Question 3

```{r}
stars <- read.csv("data/data_systems.csv", na.strings = "NA", sep = ";")
```

```{r}
str(stars)
```
We see that there are 1035 observations, as asked and 8 variables.

## Question 4
```{r}
#numerical_variables <- c("Distance", "Temperature", "Radius", "mass", "RELATIVE LUMINOSITY")
#numeric_check <- all(sapply(stars[, numerical_variables, drop = FALSE], is.numeric))
```
```{r}
num_observations <- nrow(stars)
num_variables <- ncol(stars)
missing_values <- colSums(is.na(stars))
observations_one_missing <- sum(apply(stars, 1, anyNA))

data_description <- data.frame(
  Metric = c("Number of Observations", "Number of Variables", "Number of Missing Values", "Number of Observations with Missing Values"),
  Value = c(num_observations, num_variables, sum(missing_values), observations_one_missing)
)
```

```{r warning=FALSE}

knitr::kable(data_description, col.names = c("Metric", "Value"), align = c("l", "c"))
```
# Introductory analysis
## Question 1
```{r warning=FALSE}
ggplot(stars, aes(x = Temperature, y = mass)) +
  geom_point() +
  labs(title = "Mass of Stars as a Function of Temperature",
       x = "Temperature",
       y = "Mass")
```

## Question 6

```{r}
max_mass <- which.max(stars$mass)
min_mass <- which.min(stars$mass)
extreme_mass_stars <- data.frame(
Most_Massive_star = stars$star_name[max_mass],
  Most_Massive_Value = stars$mass[max_mass],
  Least_Massive_Star = stars$star_name[min_mass],
  Least_Massive_Value = stars$mass[min_mass])
knitr::kable(extreme_mass_stars, col.names = c("Most Massive Star", "Most Massive Value", "Least Massive Star", "Least Massive Value"), align = c("l", "c", "l", "c"))
```

# 3 Factions
## Question 7
In the Battletech universe, star systems are controlled by factions. Committing into git the two data:
ALLBTFACTIONS.csv
Sytem+faction.csv

## Question 8
```{r}
faction <- read.csv("data/ALLBTFACTIONS.csv", na.strings = "missing", sep = ";")
controlling_faction <- read.csv("data/Sytem+faction.csv", na.strings = "missing", sep = ";")
```

## Question 9
```{r}
fake_factions_counts <- controlling_faction |>
  group_by(detailed.structure) |>
  summarise(
    Count = n()
  ) |>
  filter(detailed.structure %in% c("A", "I", "U"))
knitr::kable(fake_factions_counts, col.names = c("Detailed Structure", "Count"), align = c("l", "c"))
```

## Question 10
```{r}
unmatched_stars <- nrow(anti_join(stars, controlling_faction, by = "STAR_NUMBER"))

cat("The number of star systems not found in the 'Sytem+faction.csv' file is:", unmatched_stars)
```

## Question 11
```{r}
filtered_controlling_faction <- controlling_faction |>
  filter(!Faction_key %in% c("A", "I", "U"))

faction_counts <- filtered_controlling_faction |>
  group_by(Faction_key) |>
  summarise(Star_Systems = n())

ggplot(faction_counts, aes(x = Faction_key, y = Star_Systems)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(title = "Number of Star Systems Controlled by Each Faction",
       x = "Faction",
       y = "Number of Star Systems") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45))
```

## Question 12
```{r}
merged_data <- merge(merge(stars, controlling_faction, by = "STAR_NUMBER"), faction, by = "Faction_key")

real_faction_data <- merged_data |>
  filter(!Faction_key %in% c("A", "I", "U"))

ggplot(real_faction_data, aes(x = faction.name, y = Distance)) +
  geom_bar(stat = "identity") +
  labs(title = "Distance to the Sun by Faction",
       x = "Faction",
       y = "Distance to Sun (light years)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90))
```

## Question 13
```{r}
closest_star_data <- real_faction_data |>
  group_by(faction.name) |>
  filter(Distance == min(Distance, na.rm = TRUE)) |>
  select(faction.name, star_name, Distance)
knitr::kable(closest_star_data, col.names = c("Controlling Faction", "Closest Star", "Distance to Sun"), align = c("l", "l", "r"))
```

